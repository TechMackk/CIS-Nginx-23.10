################################################################################
# File: roles/nginx/tasks/configure.yml
# Purpose: NGINX configuration tasks
# Author: DevOps Automation Team
# Last Updated: October 22, 2025
################################################################################

---
# NGINX configuration

- name: "NGINX Config | Backup existing nginx.conf"
  copy:
    src: "{{ nginx_config_file }}"
    dest: "{{ nginx_config_file }}.backup.{{ ansible_date_time.epoch }}"
    remote_src: yes
    mode: '0644'
  when: ansible_check_mode == false
  ignore_errors: yes
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy main nginx.conf"
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"
    owner: root
    group: root
    mode: '0644'
    validate: 'nginx -t -c %s'
    backup: yes
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy security configuration"
  template:
    src: security.conf.j2
    dest: "{{ nginx_config_dir }}/conf.d/security.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy virtual host configurations"
  template:
    src: vhost.conf.j2
    dest: "{{ nginx_config_dir }}/conf.d/{{ item.server_name }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure
    - vhosts

- name: "NGINX Config | Remove default server config"
  file:
    path: "{{ nginx_config_dir }}/conf.d/default.conf"
    state: absent
  when: not nginx_default_server_enabled
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Configure NGINX status endpoint"
  blockinfile:
    path: "{{ nginx_config_dir }}/conf.d/status.conf"
    create: yes
    owner: root
    group: root
    mode: '0644'
    block: |
      server {
          listen {{ nginx_status_port }};
          server_name localhost;
          
          location {{ nginx_status_path }} {
              stub_status on;
              access_log off;
              {% for ip in nginx_status_allowed_ips %}
              allow {{ ip }};
              {% endfor %}
              deny all;
          }
      }
  when: nginx_status_enabled | bool
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_
################################################################################
# File: roles/nginx/tasks/configure.yml
# Purpose: NGINX configuration tasks
# Author: DevOps Automation Team
# Last Updated: October 22, 2025
################################################################################

---
# NGINX configuration

- name: "NGINX Config | Backup existing nginx.conf"
  copy:
    src: "{{ nginx_config_file }}"
    dest: "{{ nginx_config_file }}.backup.{{ ansible_date_time.epoch }}"
    remote_src: yes
    mode: '0644'
  when: ansible_check_mode == false
  ignore_errors: yes
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy main nginx.conf"
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"
    owner: root
    group: root
    mode: '0644'
    validate: 'nginx -t -c %s'
    backup: yes
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy security configuration"
  template:
    src: security.conf.j2
    dest: "{{ nginx_config_dir }}/conf.d/security.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Deploy virtual host configurations"
  template:
    src: vhost.conf.j2
    dest: "{{ nginx_config_dir }}/conf.d/{{ item.server_name }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure
    - vhosts

- name: "NGINX Config | Remove default server config"
  file:
    path: "{{ nginx_config_dir }}/conf.d/default.conf"
    state: absent
  when: not nginx_default_server_enabled
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure

- name: "NGINX Config | Configure NGINX status endpoint"
  blockinfile:
    path: "{{ nginx_config_dir }}/conf.d/status.conf"
    create: yes
    owner: root
    group: root
    mode: '0644'
    block: |
      server {
          listen {{ nginx_status_port }};
          server_name localhost;
          
          location {{ nginx_status_path }} {
              stub_status on;
              access_log off;
              {% for ip in nginx_status_allowed_ips %}
              allow {{ ip }};
              {% endfor %}
              deny all;
          }
      }
  when: nginx_status_enabled | bool
  notify:
    - validate nginx
    - reload nginx
  tags:
    - nginx_configure
    - monitoring

- name: "NGINX Config | Test configuration"
  command: nginx -t
  register: nginx_config_test
  changed_when: false
  tags:
    - nginx_configure

- name: "NGINX Config | Display configuration test results"
  debug:
    msg: "{{ nginx_config_test.stderr_lines }}"
  tags:
    - nginx_configure

################################################################################
# END OF FILE: roles/nginx/tasks/configure.yml
################################################################################